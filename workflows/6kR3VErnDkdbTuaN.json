{
  "active": false,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          },
          {
            "node": "n8n - get all workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "GitHub - get all files",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge globals and files",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If workflow already exists": {
      "main": [
        [
          {
            "node": "n8n - create workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow name already exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set n8n existing workflows names": {
      "main": [
        [
          {
            "node": "Merge Github and n8n workflows - Keep only non existing workflows based on the name",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GitHub - get all files": {
      "main": [
        [
          {
            "node": "Merge globals and files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n - get all workflows": {
      "main": [
        [
          {
            "node": "Set n8n existing workflows names",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub - get each file": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set name and content": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge globals and files": {
      "main": [
        [
          {
            "node": "GitHub - get each file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Github and n8n workflows - Keep only non existing workflows based on the name": {
      "main": [
        [
          {
            "node": "If workflow already exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Set name and content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Merge Github and n8n workflows - Keep only non existing workflows based on the name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-18T07:45:05.028Z",
  "id": "6kR3VErnDkdbTuaN",
  "meta": null,
  "name": "WF051-4: Restore backed up workflows from GitHub to n8n V1",
  "nodes": [
    {
      "parameters": {},
      "id": "ea34ce6a-47cc-454a-965a-f22e7c1c3498",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        80,
        900
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "jackovw82"
            },
            {
              "name": "repo.name",
              "value": "n8n-backups"
            },
            {
              "name": "repo.path",
              "value": "workflows/"
            }
          ]
        },
        "options": {}
      },
      "id": "7b7d0416-7d33-4078-a18f-2620a931a719",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        280,
        800
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Workflow - Restore Backups\nThis workflow will restore backed-up workflows from Github. \nIt is launch by testing the workflow\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder where your workflows are saved, within the repository.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows",
        "height": 464.79920462713443,
        "width": 389.78906250000017,
        "color": 2
      },
      "id": "02533cb3-18d7-4376-8c68-76e045d95090",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -360,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "0d350c84-eb67-447c-aed7-4600fe805984",
      "name": "Workflow name already exists",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2480,
        1080
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "063d51c7-0b7a-48a4-82b3-76b370fc4265",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              },
              "leftValue": "={{ $('Merge Github and n8n workflows - Keep only non existing workflows based on the name').item.json.name }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7a071ef9-2279-4122-a3ba-6c4b6626115d",
      "name": "If workflow already exists",
      "type": "n8n-nodes-base.if",
      "position": [
        2220,
        980
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6be8c184-8fb7-47a9-ad42-d0dc3db1eea4",
              "name": "name",
              "type": "string",
              "value": "={{ $json.name }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4b3d3c28-ccdd-4602-8455-89c66480d603",
      "name": "Set n8n existing workflows names",
      "type": "n8n-nodes-base.set",
      "position": [
        1100,
        1000
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "list",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}"
      },
      "id": "a3a06947-2fe4-4242-8baf-722b8b25dd32",
      "name": "GitHub - get all files",
      "type": "n8n-nodes-base.github",
      "position": [
        500,
        660
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "wUh09NYLk6pUiep0",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "9d21ff59-8eee-4cf7-9a4e-bac2ae04d6c8",
      "name": "n8n - get all workflows",
      "type": "n8n-nodes-base.n8n",
      "position": [
        280,
        1000
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "FMjmGrqZdEsyDdDG",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.name }}"
        },
        "filePath": "={{ $json.path }}",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "ae8884be-8f91-4863-9774-9fbc9f295cac",
      "name": "GitHub - get each file",
      "type": "n8n-nodes-base.github",
      "position": [
        920,
        780
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "wUh09NYLk6pUiep0",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "714b0cfd-9f06-4e2f-b73d-30ef39dc40e3",
              "name": "content",
              "type": "string",
              "value": "={{ $json.decodedContent }}"
            },
            {
              "id": "6f48ed58-d55a-4ee4-8cf2-373941aaa341",
              "name": "name",
              "type": "string",
              "value": "={{ $json.updatedName }}"
            }
          ]
        },
        "options": {}
      },
      "id": "657e66a7-1959-41da-b59b-54bbd773804b",
      "name": "Set name and content",
      "type": "n8n-nodes-base.set",
      "position": [
        1500,
        780
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "operation": "create",
        "workflowObject": "={{ $('Set name and content').item.json.content }}",
        "requestOptions": {}
      },
      "id": "f24d0f6f-c2a5-4c63-88c0-f03b81721e1d",
      "name": "n8n - create workflow",
      "type": "n8n-nodes-base.n8n",
      "position": [
        2480,
        860
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "FMjmGrqZdEsyDdDG",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Get all Github files\n1. List all the files from your repository\n2. Get each file as a JSON. \n3. The content, retrieved as base64, is converted in the \"Set Name and Content\" node\n\n\nThe \"Set Name and Content\" node creates a list of workflows with name and content, in order to compare it with the existing n8n workflows in the workspace.",
        "height": 478.9952882299376,
        "width": 1409.0580697977275,
        "color": 2
      },
      "id": "a3405cda-1075-4674-8219-74bd67f34cb1",
      "name": "Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        460,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "61070249-901d-4194-a2eb-d7b585d029dc",
      "name": "Merge globals and files",
      "type": "n8n-nodes-base.merge",
      "position": [
        720,
        780
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {
              "field1": "name",
              "field2": "name"
            }
          ]
        },
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input1",
        "options": {}
      },
      "id": "17617664-87d2-4b28-9725-2ed0d4798581",
      "name": "Merge Github and n8n workflows - Keep only non existing workflows based on the name",
      "type": "n8n-nodes-base.merge",
      "position": [
        2000,
        980
      ],
      "typeVersion": 2.1,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "## Merge Github and n8n workflows\n\nHere, we only keep the workflows from Github that doesn't already exist in n8n workspace, based on the name",
        "height": 196.65095879641083,
        "width": 260.44696745223945,
        "color": 2
      },
      "id": "9f378032-fa92-4796-9a81-67ce444d37f2",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1920,
        1200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Create n8n workflow\n\nCreate the n8n workflow using:\n- Content saved in Github\n- Name of the file in Github\n\n\nIf the workflow name already exist in n8n, then the workflow is not created - to avoid duplicates.",
        "height": 237.66186698228626,
        "width": 344.0461264465236,
        "color": 2
      },
      "id": "04dbff94-e3a1-45ad-87c5-eaaba8900c99",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2680,
        900
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Get existing n8n workflows\n\n1. Get all workflows\n2. Prepare a list of workflows in order to compare it with the workflows saved in the Github repo.",
        "height": 182.45487519360773,
        "width": 378.7476641422645,
        "color": 2
      },
      "id": "634a58f4-2c28-4697-9c4a-a5cfe7a36ac9",
      "name": "Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        500,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Input data should be passed into this function\nconst items = $input.all(); // Get all input items\nconst results = [];\n\nfor (let item of items) {\n  const input1 = item.json[\"content\"]; // Replace with the actual key\n  const input2 = item.json[\"name\"]; // Replace with the actual key\n  const updatedName = input2.replace('.json', '');\n  \n\n  if (input1 && typeof input1 === 'string') {\n    // Decoding the Base64 content\n    const decodedContent = Buffer.from(input1, 'base64').toString('utf-8');\n\n    // Add the decoded content to the results array\n    results.push({\n      input1: input1,\n      updatedName: updatedName,\n      decodedContent: decodedContent,\n    });\n  } else {\n    // Handle the case where input1 is undefined or not a valid type\n    results.push({\n      input1: input1,\n      updatedName: updatedName,\n      decodedContent: \"Invalid or undefined input1\",\n    });\n  }\n}\n\n// Set the results as the output\nreturn results;\n"
      },
      "id": "48c17b69-9b6c-432b-bc9f-25266d84b990",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1280,
        780
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "name, content",
        "options": {}
      },
      "id": "1dc8dd31-836d-4a67-a8d0-ddac8f830987",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1100,
        780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "fd858e57-427e-4b6c-9c25-04ccef4d7df8",
              "leftValue": "={{ $json.content }}",
              "rightValue": "Invalid or undefined input1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dc6544e4-a81f-43b8-b9fa-d530cef01d5b",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        1720,
        780
      ]
    }
  ],
  "pinData": null,
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-18T07:45:05.028Z",
  "versionId": "c901ef6f-1183-432f-ba06-e2eb86d27d34"
}