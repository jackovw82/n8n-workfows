{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Set Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Fields": {
      "main": [
        [
          {
            "node": "OpenAI - Extract Line Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "Upload File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI - Extract Line Items": {
      "main": [
        []
      ]
    },
    "Extract data from PDF": {
      "main": [
        [
          {
            "node": "ExtractData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ExtractData": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "CreateTimesheetinSM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive2": {
      "main": [
        [
          {
            "node": "Slack1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Microsoft Teams",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slack1": {
      "main": [
        []
      ]
    },
    "CreateTimesheetinSM2": {
      "main": [
        [
          {
            "node": "Google Drive2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-10T16:42:54.225Z",
  "id": "oHRlw6hYN5mVWLDw",
  "meta": {
    "templateId": "2661",
    "templateCredsSetupCompleted": true
  },
  "name": "Parse PDF timesheet with LlamaParse and save to SmartSuite",
  "nodes": [
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.id }}"
        },
        "options": {}
      },
      "id": "9df72ef9-3b9d-40e4-9cb5-a5ada153c0bb",
      "name": "Google Drive",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        1560,
        360
      ],
      "typeVersion": 3,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "kr63xedjWH78ceBj",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloud.llamaindex.ai/api/parsing/upload",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer llx-4zV59F88ycYB3fhRdML3021p4xB3SSBEe8iJBAAK9WVwxzHr"
            },
            {
              "name": "parsing_instruction",
              "value": "Please extract timesheet line items: Candidate, Client, Location, Reference, Date Ending, Date, Hours, Days, Units, Summary, AUTHORISER'S JOB TITLE, AUTHORISED SIGNATURE, DATE, Sent to, Signed by, Signed at, IP Address,Document ID , Date"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "webhook_url",
              "value": "https://n8n.jackovanwyk.com:5678/webhook-test/0f7f5ebb-8b66-453b-a818-20cc3647c783"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "disable_ocr",
              "value": "true"
            },
            {
              "name": "disable_image_extraction",
              "value": "True"
            }
          ]
        },
        "options": {}
      },
      "id": "e21bb906-658c-4a52-9c7b-b77d6e0e7ea5",
      "name": "Upload File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1760,
        360
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1DOM397M_WsQf_2aDFf2nIfdVwh2WOj86",
          "mode": "id"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "2a0c2331-4612-4b92-a0cc-b316bc663907",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "position": [
        1360,
        360
      ],
      "typeVersion": 1,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "kr63xedjWH78ceBj",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.openai.com/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": {{ JSON.stringify($('Set Fields').item.json.prompt) }}\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify( JSON.stringify($('Webhook').item.json.body.json[0].items) ) }}\n      }\n    ],\n  \"response_format\":{ \"type\": \"json_schema\", \"json_schema\":  {{ $('Set Fields').item.json.schema }}\n\n }\n  }",
        "options": {}
      },
      "id": "7ee324e8-6df3-48d6-b1b8-6fdb610b1ec7",
      "name": "OpenAI - Extract Line Items",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1700,
        840
      ],
      "typeVersion": 4.2,
      "credentials": {
        "openAiApi": {
          "id": "kmzB8kWk9HzY7IYZ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dc09a5b4-ff6a-4cee-b87e-35de7336ac05",
              "name": "prompt",
              "type": "string",
              "value": "Please, process parsed data and return only needed."
            },
            {
              "id": "4e0f9af6-517f-42af-9ced-df0e8a7118b0",
              "name": "schema",
              "type": "string",
              "value": "={\n  \"name\": \"generate_schema\",\n  \"description\": \"Generate Schema For An Array Of Objects Representing Items With Their Candidate, Client, Location, Reference, Date Ending, Date, Hours, Days, Units, Summary, Authoriser's Job Title, Authorised Signature, Date, Sent To, Signed By, Signed At, IP Address, Document ID, Date\",\n  \"strict\": true,\n  \"schema\": {\n    \"type\": \"object\",\n    \"required\": [\n      \"candidate\",\n      \"client\",\n      \"location\",\n      \"reference\",\n      \"date_ending\",\n      \"date\",\n      \"hours\",\n      \"days\",\n      \"units\",\n      \"summary\",\n      \"authoriser_job_title\",\n      \"authorised_signature\",\n      \"sent_to\",\n      \"signed_by\",\n      \"signed_at\",\n      \"ip_address\",\n      \"document_id\",\n      \"items\"\n    ],\n    \"properties\": {\n      \"candidate\": {\n        \"type\": \"string\",\n        \"description\": \"Candidate associated with the document\"\n      },\n      \"client\": {\n        \"type\": \"string\",\n        \"description\": \"Client associated with the document\"\n      },\n      \"location\": {\n        \"type\": \"string\",\n        \"description\": \"Location relevant to the document\"\n      },\n      \"reference\": {\n        \"type\": \"string\",\n        \"description\": \"Reference number or ID\"\n      },\n      \"date_ending\": {\n        \"type\": \"string\",\n        \"format\": \"date\",\n        \"description\": \"End date in YYYY-MM-DD format\"\n      },\n      \"date\": {\n        \"type\": \"string\",\n        \"format\": \"date\",\n        \"description\": \"Document date in YYYY-MM-DD format\"\n      },\n      \"hours\": {\n        \"type\": \"number\",\n        \"description\": \"Total hours associated\"\n      },\n      \"days\": {\n        \"type\": \"number\",\n        \"description\": \"Total days associated\"\n      },\n      \"units\": {\n        \"type\": \"number\",\n        \"description\": \"Total units associated\"\n      },\n      \"summary\": {\n        \"type\": \"string\",\n        \"description\": \"Summary of the document\"\n      },\n      \"authoriser_job_title\": {\n        \"type\": \"string\",\n        \"description\": \"Job title of the authoriser\"\n      },\n      \"authorised_signature\": {\n        \"type\": \"string\",\n        \"description\": \"Authorised signature data (could be a base64 string if digital)\"\n      },\n      \"sent_to\": {\n        \"type\": \"string\",\n        \"description\": \"Recipient of the document\"\n      },\n      \"signed_by\": {\n        \"type\": \"string\",\n        \"description\": \"Name of the person who signed the document\"\n      },\n      \"signed_at\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\",\n        \"description\": \"Timestamp of when the document was signed\"\n      },\n      \"ip_address\": {\n        \"type\": \"string\",\n        \"format\": \"ipv4\",\n        \"description\": \"IP address of the signer\"\n      },\n      \"document_id\": {\n        \"type\": \"string\",\n        \"description\": \"Unique identifier for the document\"\n      },\n      \"items\": {\n        \"type\": \"array\",\n        \"description\": \"Array of item objects\",\n        \"items\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"description\",\n            \"qty\",\n            \"unit_price\",\n            \"amount\"\n          ],\n          \"properties\": {\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"Description of the item\"\n            },\n            \"qty\": {\n              \"type\": \"number\",\n              \"description\": \"Quantity of the item\"\n            },\n            \"unit_price\": {\n              \"type\": \"string\",\n              \"description\": \"Unit price of the item formatted as a string\"\n            },\n            \"amount\": {\n              \"type\": \"string\",\n              \"description\": \"Total amount for the item formatted as a string\"\n            }\n          },\n          \"additionalProperties\": false\n        }\n      }\n    },\n    \"additionalProperties\": false\n  }\n}\n"
            }
          ]
        },
        "options": {}
      },
      "id": "eda31919-9091-4d45-bd73-4609b71f93a9",
      "name": "Set Fields",
      "type": "n8n-nodes-base.set",
      "position": [
        1480,
        840
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "0f7f5ebb-8b66-453b-a818-20cc3647c783",
        "options": {}
      },
      "id": "741dc44e-6d47-4a77-80c2-5e18b291da33",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        1280,
        840
      ],
      "webhookId": "0f7f5ebb-8b66-453b-a818-20cc3647c783",
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "## Scenario 1: Pick up and Download Files\n\n",
        "height": 400,
        "width": 920
      },
      "id": "fbc196c8-7518-4deb-ac47-f37f1b8150eb",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1180,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Scenario 2: Load the data into Smartsuite\n\n",
        "height": 460,
        "width": 1080
      },
      "id": "96368d41-7886-487f-a8a7-e4dac3b01f45",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1180,
        700
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Replace Google Drive connection",
        "height": 80,
        "width": 270,
        "color": 3
      },
      "id": "6b7c94d7-c844-4246-ba1a-cea5937792db",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1280,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Replace API key in header",
        "height": 80,
        "width": 170,
        "color": 3
      },
      "id": "9c8141d0-428a-44e5-b900-b07fa64db4f5",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1760,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Replace OpenAI connection",
        "height": 80,
        "width": 170,
        "color": 3
      },
      "id": "48243fe4-4ed1-43dc-b508-8b3f9472bb67",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1660,
        1020
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Replace SmartSuite connection",
        "height": 80,
        "width": 210,
        "color": 3
      },
      "id": "ffc6b530-69ab-4ccb-945d-94f8fdc1e3ab",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1900,
        1020
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### ... or watch set up video [7 min]\n[![Youtube Thumbnail](https://cflobdhpqwnoisuctsoc.supabase.co/storage/v1/object/public/my_storage/Video%2010%20-%20Parser%20invoices%20Blur.png)](https://youtu.be/E4I0nru-fa8)\n",
        "height": 239.5888196628349,
        "width": 330.5152611046425,
        "color": 7
      },
      "id": "15047f43-5f7e-4c70-a754-fffb41c04611",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Set up steps\n\n1. **Google Drive Trigger**: \n   - Set up a trigger to detect new files in a specified folder dedicated to invoices.\n\n2. **File Upload to LlamaParse**: \n   - Create an HTTP request that sends the invoice file to LlamaParse for parsing, including relevant header settings and webhook URL.\n\n3. **Webhook Processing**: \n   - Establish a webhook node to handle parsed results from LlamaParse, extracting needed invoice details effectively.\n\n4. **Invoice Record Creation**: \n   - Create initial records for invoices in your database using the parsed details received from the webhook.\n\n5. **Line Item Processing**: \n   - Transform string data into structured line item arrays and create individual records for each item linked to the main invoice.",
        "height": 626,
        "width": 280,
        "color": 7
      },
      "id": "a80e6528-cf79-4229-8c58-6856fd86b6e7",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        420,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Scenario 3: Move Processed File\n\n",
        "height": 400,
        "width": 500,
        "color": 3
      },
      "id": "21de4eca-72b2-4597-889b-6c45137e6193",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2140,
        1060
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {
          "keepSource": "json"
        }
      },
      "id": "2a430519-3dbe-4587-9154-6e54fcd84b87",
      "name": "Extract data from PDF",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        1340,
        1940
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/673f9850fd7f7757d7d8a304/records/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"title\": \"{{ $json.date }} - {{ $json.referenceNumber }}\",\n  \"s88e7dacd4\": {\n    \"value\": \"ready_for_review\"\n  },\n  \"sc6358e22b\": \"{{ $json.candidateName }}\",\n  \"s6820339ba\": \"{{ $json.referenceNumber }}\",\n  \"s62a9aa083\": \"{{ $json.clientName }}\",\n  \"sd4cb9fc1a\": \"{{ $json.dateEnding }}\",\n  \"s46840c42e\": \"{{ $json.location }}\",\n  \"s6d6c84d0e\": \"{{ $json.day }}\",\n  \"s79ec764b0\": \"{{ $json.date }}\",\n  \"s648fe3550\": \"{{ $json.hours }}\",\n  \"s6085b7d41\": \"{{ $json.days }}\",\n  \"s20922dd4d\": \"{{ $json.signedBy }}\",\n  \"sf8ceb18d9\": \"{{ $json.signedAt }}\",\n  \"s81402a07c\": \"{{ $json.documentId }}\",\n  \"sc119cf5c1\": \"{{ $json.verificationDate }}\",\n  \"sf9f6aef7a\": \"{{ $('Download PDF').item.json.webViewLink }}\"\n}\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 60000
            }
          }
        }
      },
      "id": "4c930ed9-76ef-49d5-a330-1ead7aa87634",
      "name": "CreateTimesheetinSM",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2000,
        1940
      ]
    },
    {
      "parameters": {
        "jsCode": "const text = items[0].json.text; // Assuming the text content is stored in the 'text' property of the first item\nconst lines = text.split('\\n'); // Split the text into lines for easier processing\n\n// Initialize object to store extracted data\nconst data = {\n  candidateName: '',\n  referenceNumber: '',\n  clientName: '',\n  dateEnding: '',\n  formattedDateEnding: '', // New attribute for the transformed date\n  location: '',\n  projectName: '', // Assume this is previously added or will be added\n  timeEntries: [],\n  signedBy: '',\n  signedAt: '',\n  ipAddresses: [],\n  documentId: '',\n  verificationDate: ''\n};\n\n// Improved extraction logic\ndata.candidateName = lines[6].match(/Candidate:\\s(.+?)\\sReference:/)?.[1] || \"Not available\";\ndata.referenceNumber = lines[6].match(/Reference:\\s(\\d+)/)?.[1] || \"Not available\";\n\n// Extract location and dateEnding with improved logic\nconst clientAndDateLine = lines.find(line => line.includes(\"Client:\"));\nif (clientAndDateLine) {\n    data.dateEnding = clientAndDateLine.match(/Date Ending:\\s([^]*)/)?.[1] || \"Not specified\";\n    data.clientName = clientAndDateLine.match(/Client:\\s(.+?)\\sDate Ending/)?.[1] || \"Not available\";\n}\n\nconst locationLine = lines.find(line => line.includes(\"Location:\"));\nif (locationLine) {\n    data.location = locationLine.split('Location: ')[1].trim();\n}\n\n// Convert dateEnding to DD/MM/YYYY format\nif (data.dateEnding !== \"Not specified\") {\n    const dateParts = data.dateEnding.split(' '); // Split \"21 Dec 2024\" into parts\n    const months = { Jan: '01', Feb: '02', Mar: '03', Apr: '04', May: '05', Jun: '06', Jul: '07', Aug: '08', Sep: '09', Oct: '10', Nov: '11', Dec: '12' };\n    const day = dateParts[0].padStart(2, '0'); // Ensure day is two digits\n    const month = months[dateParts[1]]; // Convert month name to month number\n    const year = dateParts[2];\n    data.formattedDateEnding = `${day}/${month}/${year}`; // Format to DD/MM/YYYY\n}\n\n// Extract signature and verification details\ndata.signedBy = text.match(/Signed by:\\s(.+?)\\sSigned at:/)?.[1] || \"Not available\";\ndata.signedAt = text.match(/Signed at:\\s(.+?),/)?.[1] || \"Not specified\";\ndata.ipAddresses = text.match(/IP Address:\\s([\\d.,\\s]+)/)?.[1].split(',').map(ip => ip.trim()) || [];\ndata.documentId = text.match(/Document ID:\\s([\\d\\s]+)/)?.[1].replace(/\\s+/g, '').trim() || \"Not available\";\ndata.verificationDate = text.match(/Date:\\s(\\d{2} \\w+ \\d{4})/)?.[1] || \"Not specified\";\n\n// Extract time entries and flatten them\nconst entryRegex = /^(Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday)\\s(\\d{1,2}\\s\\w+\\s\\d{4})\\s(\\d+\\.\\d+)\\s(\\d+\\.\\d+)$/;\nconst flattenedEntries = [];\nlines.forEach(line => {\n  const match = line.match(entryRegex);\n  if (match) {\n    flattenedEntries.push({\n      json: {\n        candidateName: data.candidateName,\n        referenceNumber: data.referenceNumber,\n        clientName: data.clientName,\n        dateEnding: data.dateEnding,\n        formattedDateEnding: data.formattedDateEnding, // Include new formatted date attribute\n        location: data.location,\n        day: match[1],\n        date: match[2],\n        hours: parseFloat(match[3]),\n        days: parseFloat(match[4]),\n        signedBy: data.signedBy,\n        signedAt: data.signedAt,\n        ipAddresses: data.ipAddresses,\n        documentId: data.documentId,\n        verificationDate: data.verificationDate\n      }\n    });\n  }\n});\n\nreturn flattenedEntries;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1580,
        1940
      ],
      "id": "cd288514-6ff9-49e3-8565-ed7db82ca54f",
      "name": "ExtractData"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        1800,
        1940
      ],
      "id": "d0014557-7d5f-4122-baac-a42c76cbe88a",
      "name": "Limit"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C07CD5PH1DJ",
          "mode": "list",
          "cachedResultName": "n8n-notifications"
        },
        "text": "=✅ New EE client time sheet - [{{ $execution.id }}] has been added to Smartsuite - workflows have been processed.",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        2440,
        1120
      ],
      "id": "dcc9f5c4-31ea-4a3c-9f94-95c285996622",
      "name": "Slack1",
      "webhookId": "ca2af7b6-d0ef-43dc-86d7-9daafd885ff9",
      "credentials": {
        "slackApi": {
          "id": "yU7RxPAK1zAlbH23",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "resource": "channelMessage",
        "teamId": {
          "__rl": true,
          "value": "ffe4fcdb-6aba-456e-b16c-78a24fb9a58c",
          "mode": "list",
          "cachedResultName": "Alerts and Incidents"
        },
        "channelId": {
          "__rl": true,
          "value": "19:ddca698179da493ab9d816b897bae335@thread.tacv2",
          "mode": "list",
          "cachedResultName": "n8n-timesheets-integration",
          "cachedResultUrl": "https://teams.microsoft.com/l/channel/19%3Addca698179da493ab9d816b897bae335%40thread.tacv2/n8n-timesheets-integration?groupId=ffe4fcdb-6aba-456e-b16c-78a24fb9a58c&tenantId=dd377119-acad-4957-937d-4dc6af698a65&allowXTenantAccess=True&ngc=True"
        },
        "message": "✅ New EE client time sheet - [{{ $execution.id }}] has been added to Smartsuite - workflows have been processed.",
        "options": {}
      },
      "type": "n8n-nodes-base.microsoftTeams",
      "typeVersion": 2,
      "position": [
        2440,
        1280
      ],
      "id": "4ce42ced-badd-49a1-b4c1-33d01731c5cb",
      "name": "Microsoft Teams",
      "credentials": {
        "microsoftTeamsOAuth2Api": {
          "id": "gvOGMiIjuXJWv3fO",
          "name": "Microsoft Teams account"
        }
      }
    },
    {
      "parameters": {
        "operation": "move",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "driveId": {
          "__rl": true,
          "value": "0AO4pwPDytuLPUk9PVA",
          "mode": "list",
          "cachedResultName": "[7] JVWBSN",
          "cachedResultUrl": "https://drive.google.com/drive/folders/0AO4pwPDytuLPUk9PVA"
        },
        "folderId": {
          "__rl": true,
          "value": "1DALw-ZOXZT5kFL3zqFqDZruGp5742o0n",
          "mode": "id"
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2240,
        1180
      ],
      "id": "7d1fa9ac-16d7-4545-8a9b-6de9d84712d1",
      "name": "Google Drive2",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "kr63xedjWH78ceBj",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/673f9850fd7f7757d7d8a304/records/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"title\": \"{{ $json.date }} - {{ $json.referenceNumber }}\",\n  \"s88e7dacd4\": {\n    \"value\": \"ready_for_review\"\n  },\n  \"sc6358e22b\": \"{{ $json.candidateName }}\",\n  \"s6820339ba\": \"{{ $json.referenceNumber }}\",\n  \"s62a9aa083\": \"{{ $json.clientName }}\",\n  \"sd4cb9fc1a\": \"{{ $json.dateEnding }}\",\n  \"s46840c42e\": \"{{ $json.location }}\",\n  \"s6d6c84d0e\": \"{{ $json.day }}\",\n  \"s79ec764b0\": \"{{ $json.date }}\",\n  \"s648fe3550\": \"{{ $json.hours }}\",\n  \"s6085b7d41\": \"{{ $json.days }}\",\n  \"s20922dd4d\": \"{{ $json.signedBy }}\",\n  \"sf8ceb18d9\": \"{{ $json.signedAt }}\",\n  \"s81402a07c\": \"{{ $json.documentId }}\",\n  \"sc119cf5c1\": \"{{ $json.verificationDate }}\",\n  \"sf9f6aef7a\": \"{{ $('Download PDF').item.json.webViewLink }}\"\n}\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 60000
            }
          }
        }
      },
      "id": "03336038-4314-4100-a386-85850240c871",
      "name": "CreateTimesheetinSM2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1940,
        840
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Google Drive Trigger": {
      "lastTimeChecked": "2025-02-12T07:33:03Z"
    }
  },
  "tags": [],
  "triggerCount": 2,
  "updatedAt": "2025-02-12T07:33:02.000Z",
  "versionId": "29e83061-6c46-4d66-af8f-346c2ed8748f"
}