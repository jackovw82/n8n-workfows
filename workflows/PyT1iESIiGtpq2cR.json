{
  "active": false,
  "connections": {
    "HTML": {
      "main": [
        [
          {
            "node": "Send to Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Set Order Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Yesterday Date": {
      "main": [
        [
          {
            "node": "Airtable Get Today's Orders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Everyday at 7PM": {
      "main": [
        [
          {
            "node": "Yesterday Date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Order Fields": {
      "main": [
        [
          {
            "node": "Store Order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Airtable Get Today's Orders": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-04T19:17:13.333Z",
  "id": "PyT1iESIiGtpq2cR",
  "meta": {
    "templateId": "2407"
  },
  "name": "Store new orders to Airtable and summarize daily orders through email",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 0 19 * * *"
            }
          ]
        }
      },
      "id": "faade37e-908d-494c-af74-93c8f01adcc5",
      "name": "Everyday at 7PM",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        1440,
        840
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appdtUVSpfWswMwNC",
          "cachedResultUrl": "https://airtable.com/appdtUVSpfWswMwNC",
          "cachedResultName": "Untitled Base"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tblu6F5rLbR3Axtgj",
          "cachedResultUrl": "https://airtable.com/appdtUVSpfWswMwNC/tblu6F5rLbR3Axtgj",
          "cachedResultName": "orders"
        },
        "filterByFormula": "=AND(time < \"{{ $json.now }}\", time > \"{{ $json.yesterday }}\")",
        "options": {}
      },
      "id": "4abddfea-fee9-419c-92c4-3055faa2dd09",
      "name": "Airtable Get Today's Orders",
      "type": "n8n-nodes-base.airtable",
      "position": [
        1900,
        840
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "jsCode": "// Create a new date object for yesterday, 7pm\nconst yesterday = new Date();\nyesterday.setDate( new Date().getDate() - 1); \nyesterday.setHours(19, 0, 0, 0);\nconst isoString = yesterday.toISOString();\nreturn {yesterday:isoString, now:new Date().toISOString()}"
      },
      "id": "ea29159e-3674-4385-a0bd-2a9df7d7117c",
      "name": "Yesterday Date",
      "type": "n8n-nodes-base.code",
      "position": [
        1660,
        840
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\" />\n</head>\n<body>\n  <table>\n    <tr> \n      {{ Object.keys($input.first().json).map(propname=>'<td>'+propname+'</td>').join('')  \n      }}\n    </tr>\n      \n    {{ $input.all().map(order=>{\n        \n        return \"<tr>\"+Object.values(order.json).map(prop=>{\n            return \"<td>\"+prop+\"</td>\"\n          }).join('') +\"</tr>\"\n      }).join('') \n    }}\n  </table>\n</body>\n</html>\n\n<style>\n.container {\n  background-color: #ffffff;\n  text-align: center;\n  padding: 16px;\n  border-radius: 8px;\n}\n\nh1 {\n  color: #ff6d5a;\n  font-size: 24px;\n  font-weight: bold;\n  padding: 8px;\n}\n\nh2 {\n  color: #909399;\n  font-size: 18px;\n  font-weight: bold;\n  padding: 8px;\n}\n</style>\n"
      },
      "id": "8254aa63-2682-4c48-8843-c93830c724de",
      "name": "HTML",
      "type": "n8n-nodes-base.html",
      "position": [
        2120,
        840
      ],
      "executeOnce": true,
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2c2f9e3c-696a-466a-8bfe-5c8aa942c9ab",
              "name": "time",
              "type": "string",
              "value": "={{ new Date().toISOString() }}"
            },
            {
              "id": "5618b2a7-8149-469d-87ee-535f1adac121",
              "name": "orderID",
              "type": "string",
              "value": "={{ $json.body.orderID }}"
            },
            {
              "id": "dc31db55-24e4-468f-a9fd-456298f5e5ab",
              "name": "orderPrice",
              "type": "number",
              "value": "={{ $json.body.orderPrice }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5e9f6ad7-e4fc-41e3-991b-cae9210dfb71",
      "name": "Set Order Fields",
      "type": "n8n-nodes-base.set",
      "position": [
        1660,
        540
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "sendTo": "axelrose20272027@gmail.com",
        "subject": "Daily Order Summary",
        "message": "={{ $json.html }}",
        "options": {}
      },
      "id": "68eaa8f7-3b67-484e-8bad-87e621adc1df",
      "name": "Send to Gmail",
      "type": "n8n-nodes-base.gmail",
      "position": [
        2340,
        840
      ],
      "typeVersion": 2.1,
      "webhookId": "0542b53d-e8a2-46de-acde-28e878a145fe"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appdtUVSpfWswMwNC",
          "cachedResultUrl": "https://airtable.com/appdtUVSpfWswMwNC",
          "cachedResultName": "Untitled Base"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tblu6F5rLbR3Axtgj",
          "cachedResultUrl": "https://airtable.com/appdtUVSpfWswMwNC/tblu6F5rLbR3Axtgj",
          "cachedResultName": "orders"
        },
        "columns": {
          "value": {
            "orderID": 0,
            "customerID": 0,
            "orderPrice": 0
          },
          "schema": [
            {
              "id": "time",
              "type": "dateTime",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "time",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "orderID",
              "type": "number",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "orderID",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "customerID",
              "type": "number",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "customerID",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "orderPrice",
              "type": "number",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "orderPrice",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "orderStatus",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "orderStatus",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "autoMapInputData",
          "matchingColumns": []
        },
        "options": {
          "typecast": true
        }
      },
      "id": "9f22bedc-fbe1-421b-8212-189c7d436cab",
      "name": "Store Order",
      "type": "n8n-nodes-base.airtable",
      "position": [
        1900,
        540
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "content": "### New order is sent to the Webhook via POST with params {orderID, orderPrice}",
        "height": 220.18022408852067,
        "width": 857.9236217062975
      },
      "id": "6ace0e8f-85e1-45bc-ae81-331c5722ef46",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1340,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Daily summary sent to email at 7PM",
        "height": 235.62797364881823,
        "width": 1202.2434730902464
      },
      "id": "6907ae8d-90b7-4e07-883d-3ebd4440d811",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1340,
        780
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Aggregate Daily Orders with Airtable\n### This workflow will collect order data as it is produced, then send a summary email of all orders at the end of every day, formatted in a table.\n\n## Setup:\n 1. Create a new table in Airtable and give it a field *time* with type date, *orderID* with type number, and *orderPrice* also with type number. \n 2. Create a new access token if you haven't already at https://airtable.com/create/tokens/new. Make sure to give the token the scopes *data.records:read*, *data.records:write*, *schema.bases:read* and access to whichever table you choose to store the orders. A pop-up window appears with the token. Use this token to make `Create New Credential` > `Access Token` for Airtable in the `Store Order` and `Airtable Get Today's Orders` nodes.\n 3. Create access credentials for your Gmail as described here: https://developers.google.com/workspace/guides/create-credentials. Use the credentials from your *client_secret.json* in the `Send to Gmail` node.\n 4. In the `Store Order` node, change *Base* and *Table* to the database and table in your Airtable account you wish to use to store orders. Make sure to use these same values in the `Airtable Get Today's Orders` node.\n 5. Every time an order is created in your system, send a POST request to Webhook from your order software. Each request must contain a single order containing fields *'orderID'* and *'orderPrice'* (or, edit `Set Order Fields` to select which incoming fields you wish to save)\n 6. Change the schedule time for sending email from `Everyday at 7PM` to whichever time you choose. \n \n\n## Test:\n- Activate the workflow.\n- From the node `Webhook`, copy *Production URL*\n- Send the following CURL request to the URL given to you:\n` curl -X POST   -H \"Content-Type: application/json\"   -d '{\"orderID\": 12345, \"orderPrice\": 99.99}' YOUR_URL_HERE`\n- It should say *Node executed successfully*. Now check your Airtable and confirm the order was stored in the right place.",
        "height": 893.1187181589532,
        "width": 607.7708924207209,
        "color": 4
      },
      "id": "848c6acb-2f9c-4d85-8349-a4a31204922b",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        380,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "- New Order!",
        "height": 80,
        "width": 170,
        "color": 3
      },
      "id": "d9a5ef05-beba-480f-967e-840cf1b71248",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1200,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": " - It's 7PM!",
        "height": 80,
        "width": 170,
        "color": 3
      },
      "id": "0f433e34-79cd-42d0-9b56-4a306eb91907",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1200,
        860
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "e9e62c98-390d-4d16-bc77-a13b043bf1cf",
        "options": {}
      },
      "id": "fb9c4b49-ee1f-4233-8277-4c35fb423fde",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        1440,
        540
      ],
      "webhookId": "e9e62c98-390d-4d16-bc77-a13b043bf1cf",
      "typeVersion": 2
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-02-04T19:17:13.333Z",
  "versionId": "6e1641ea-b33c-462c-8b31-71610fa03e38"
}